name: Prod CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache Turbo repo
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install backend dependencies
        working-directory: ./apps/backend
        run: pnpm install

      - name: Lint backend
        working-directory: ./apps/backend
        run: pnpm run lint

      - name: Build backend
        working-directory: ./apps/backend
        run: pnpm run build

      - name: Test backend
        working-directory: ./apps/backend
        run: pnpm run test

      - name: Install frontend dependencies
        working-directory: ./apps/frontend
        run: pnpm install

      - name: Lint frontend
        working-directory: ./apps/frontend
        run: pnpm run lint

      - name: Build frontend
        working-directory: ./apps/frontend
        run: pnpm run build

      - name: Test frontend
        working-directory: ./apps/frontend
        run: pnpm run test

      - name: Build backend Docker image
        run: docker build -t solia-backend:latest -f apps/backend/Dockerfile .

      - name: Build frontend Docker image
        run: docker build -t solia-frontend:latest -f apps/frontend/Dockerfile .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend Docker image
        run: docker tag solia-backend:latest ${{ secrets.DOCKER_USERNAME }}/solia-backend:latest
      - run: docker push ${{ secrets.DOCKER_USERNAME }}/solia-backend:latest

      - name: Push frontend Docker image
        run: docker tag solia-frontend:latest ${{ secrets.DOCKER_USERNAME }}/solia-frontend:latest
      - run: docker push ${{ secrets.DOCKER_USERNAME }}/solia-frontend:latest

      - name: Deploy backend to Railway
        run: |
          # Add deployment commands or use Railway CLI here
          echo "Deploy backend to Railway (to be implemented)"

      - name: Deploy frontend to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/frontend
          vercel-args: "--prod"
